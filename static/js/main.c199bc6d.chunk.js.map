{"version":3,"sources":["api/index.ts","store/features/employees/employeesSlice.ts","store/index.ts","styles.ts","hooks/useTypedDispatch.ts","hooks/useTypedSelector.ts","components/EmployeeItem/styles.ts","components/EmployeeItem/index.tsx","utils/index.ts","components/EmployeesList/styles.ts","components/EmployeesList/index.tsx","components/BirthdayItem/styles.ts","components/BirthdayItem/index.tsx","components/BirthdayList/styles.ts","components/BirthdayList/index.tsx","components/Loader/styles.ts","components/Loader/index.tsx","components/Error/styles.ts","components/Error/index.tsx","pages/Employees/styles.ts","pages/Employees/index.tsx","index.tsx"],"names":["getEmployees","axios","get","then","res","data","createAsyncThunk","a","response","YalantisApi","employeesSlice","createSlice","name","initialState","employees","selectedEmployees","error","status","reducers","addEmployee","state","action","push","payload","localStorage","setItem","JSON","stringify","removeEmployee","filter","item","id","includes","extraReducers","builder","addCase","pending","fulfilled","parse","getItem","rejected","actions","store","configureStore","reducer","employeesReducer","GlobalStyle","createGlobalStyle","displayName","useTypedDispatch","useDispatch","useTypedSelector","useSelector","EmployeeItemWrapper","styled","div","EmployeeName","props","active","EmployeeBtnGroup","EmployeeNotActiveWrapper","EmployeeActiveWrapper","EmployeeInput","input","EmployeeLabel","label","EmployeeItem","employee","useState","setActive","dispatch","handleChangeActive","e","target","value","useEffect","checkActiveStatusFromLocalStorage","firstName","lastName","type","checked","onChange","htmlFor","alphabet","EmployeesListWrapper","EmployeeItemsList","char","length","map","AlphabetList","index","EmployeesList","BirthdayItemWrapper","li","BirthdayItem","fullEmployeeNames","fullDateOfBirthday","moment","dob","format","BirthdayListWrapper","BirthdayListTitle","h3","ListItems","month","sortedEmployeesByLastName","sort","b","localeCompare","MonthsList","months","currentMonth","monthsArr","concat","slice","BirthdayList","LoaderText","h2","Loader","ErrorMessage","Error","message","EmployeesWrapper","EmployeesBox","EmployeesTitle","Employees","render","document","getElementById"],"mappings":"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","file":"static/js/main.c199bc6d.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport interface IEmployee {\r\n  id: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  dob: string;\r\n}\r\n\r\nclass YalantisApi {\r\n  getEmployees = (): Promise<IEmployee[]> => {\r\n    return axios\r\n      .get(\"https://yalantis-react-school-api.yalantis.com/api/task0/users\")\r\n      .then((res) => res.data);\r\n  };\r\n}\r\n\r\nexport default new YalantisApi();\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport YalantisApi, { IEmployee } from \"../../../api\";\r\n\r\ninterface EmployeesState {\r\n  employees: IEmployee[];\r\n  selectedEmployees: IEmployee[];\r\n  error: string;\r\n  status: string;\r\n}\r\n\r\nconst initialState: EmployeesState = {\r\n  employees: [],\r\n  selectedEmployees: [],\r\n  error: \"\",\r\n  status: \"\"\r\n};\r\n\r\nexport const getEmployees = createAsyncThunk(\r\n  \"employees/getEmployees\",\r\n  async () => {\r\n    const response = YalantisApi.getEmployees();\r\n    return await response;\r\n  }\r\n);\r\n\r\nexport const employeesSlice = createSlice({\r\n  name: \"employees\",\r\n  initialState,\r\n  reducers: {\r\n    addEmployee: (state, action) => {\r\n      state.selectedEmployees.push(action.payload);\r\n      localStorage.setItem(\r\n        \"selectedEmployees\",\r\n        JSON.stringify(state.selectedEmployees)\r\n      );\r\n    },\r\n    removeEmployee: (state, action) => {\r\n      state.selectedEmployees = state.selectedEmployees.filter(\r\n        (item) => !item.id.includes(action.payload)\r\n      );\r\n      localStorage.setItem(\r\n        \"selectedEmployees\",\r\n        JSON.stringify(state.selectedEmployees)\r\n      );\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getEmployees.pending, (state) => {\r\n      state.status = \"loading\";\r\n    });\r\n    builder.addCase(getEmployees.fulfilled, (state, { payload }) => {\r\n      state.status = \"resolved\";\r\n      state.employees = payload;\r\n      state.selectedEmployees = JSON.parse(\r\n        localStorage.getItem(\"selectedEmployees\") || \"[]\"\r\n      );\r\n    });\r\n    builder.addCase(getEmployees.rejected, (state) => {\r\n      state.status = \"rejected\";\r\n      state.error = \"Failed load data\";\r\n    });\r\n  }\r\n});\r\n\r\nexport const { addEmployee, removeEmployee } = employeesSlice.actions;\r\nexport default employeesSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport employeesReducer from \"./features/employees/employeesSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    employees: employeesReducer\r\n  }\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: \r\n      -apple-system,BlinkMacSystemFont,\r\n      \"Segoe UI\",\r\n      \"Roboto\", \r\n      sans-serif;\r\n  }\r\n`;\r\n\r\nGlobalStyle.displayName = \"GlobalStyles\";\r\n","import { useDispatch } from \"react-redux\";\r\nimport { AppDispatch } from \"../store\";\r\n\r\nexport const useTypedDispatch = () => useDispatch<AppDispatch>();\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import styled from \"styled-components\";\r\n\r\nexport const EmployeeItemWrapper = styled.div``;\r\nEmployeeItemWrapper.displayName = \"EmployeeItemWrapper\";\r\n\r\nexport const EmployeeName = styled(\"h3\")<{ active: boolean }>`\r\n  color: ${(props) => (props.active ? \"#0d6efd;\" : \"#000;\")};\r\n`;\r\nEmployeeName.displayName = \"EmployeeName\";\r\n\r\nexport const EmployeeBtnGroup = styled.div``;\r\nEmployeeBtnGroup.displayName = \"EmployeeBtnGroup\";\r\n\r\nexport const EmployeeNotActiveWrapper = styled.div``;\r\nEmployeeNotActiveWrapper.displayName = \"EmployeeNotActiveWrapper\";\r\n\r\nexport const EmployeeActiveWrapper = styled.div``;\r\nEmployeeActiveWrapper.displayName = \"EmployeeActiveWrapper\";\r\n\r\nexport const EmployeeInput = styled.input`\r\n  cursor: pointer;\r\n`;\r\nEmployeeInput.displayName = \"EmployeeInput\";\r\n\r\nexport const EmployeeLabel = styled.label`\r\n  margin-left: 10px;\r\n  cursor: pointer;\r\n`;\r\nEmployeeLabel.displayName = \"EmployeeLabel\";\r\n","import { ChangeEvent, FC, useEffect, useState } from \"react\";\r\nimport { useTypedDispatch } from \"../../hooks/useTypedDispatch\";\r\nimport {\r\n  addEmployee,\r\n  removeEmployee\r\n} from \"../../store/features/employees/employeesSlice\";\r\nimport {\r\n  EmployeeItemWrapper,\r\n  EmployeeName,\r\n  EmployeeBtnGroup,\r\n  EmployeeActiveWrapper,\r\n  EmployeeNotActiveWrapper,\r\n  EmployeeInput,\r\n  EmployeeLabel\r\n} from \"./styles\";\r\n\r\ninterface EmployeeItemProps {\r\n  employee: {\r\n    id: string;\r\n    firstName: string;\r\n    lastName: string;\r\n  };\r\n}\r\n\r\nconst EmployeeItem: FC<EmployeeItemProps> = ({ employee }) => {\r\n  const [active, setActive] = useState(false);\r\n  const dispatch = useTypedDispatch();\r\n\r\n  const handleChangeActive = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setActive(!active);\r\n    if (active) {\r\n      dispatch(removeEmployee(employee.id));\r\n      localStorage.setItem(employee.id, e.target.value);\r\n    } else {\r\n      dispatch(addEmployee(employee));\r\n      localStorage.setItem(employee.id, e.target.value);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const checkActiveStatusFromLocalStorage = localStorage.getItem(\r\n      `${employee.id}`\r\n    );\r\n\r\n    if (checkActiveStatusFromLocalStorage) {\r\n      setActive(JSON.parse(checkActiveStatusFromLocalStorage));\r\n    }\r\n  }, [employee.id]);\r\n\r\n  return (\r\n    <EmployeeItemWrapper>\r\n      <EmployeeName active={active}>\r\n        {employee.firstName} {employee.lastName}\r\n      </EmployeeName>\r\n      <EmployeeBtnGroup>\r\n        <EmployeeNotActiveWrapper>\r\n          <EmployeeInput\r\n            type=\"radio\"\r\n            id={`${employee.id}-not-active`}\r\n            name={employee.firstName}\r\n            value={\"false\"}\r\n            checked={!active}\r\n            onChange={handleChangeActive}\r\n          />\r\n          <EmployeeLabel htmlFor={`${employee.id}-not-active`}>\r\n            not active\r\n          </EmployeeLabel>\r\n        </EmployeeNotActiveWrapper>\r\n        <EmployeeActiveWrapper>\r\n          <EmployeeInput\r\n            type=\"radio\"\r\n            id={`${employee.id}-active`}\r\n            name={employee.firstName}\r\n            value={\"true\"}\r\n            checked={active}\r\n            onChange={handleChangeActive}\r\n          />\r\n          <EmployeeLabel htmlFor={`${employee.id}-active`}>\r\n            active\r\n          </EmployeeLabel>\r\n        </EmployeeActiveWrapper>\r\n      </EmployeeBtnGroup>\r\n    </EmployeeItemWrapper>\r\n  );\r\n};\r\n\r\nexport default EmployeeItem;\r\n","export const alphabet = [\r\n  \"A\",\r\n  \"B\",\r\n  \"C\",\r\n  \"D\",\r\n  \"E\",\r\n  \"F\",\r\n  \"G\",\r\n  \"H\",\r\n  \"I\",\r\n  \"J\",\r\n  \"K\",\r\n  \"L\",\r\n  \"M\",\r\n  \"N\",\r\n  \"O\",\r\n  \"P\",\r\n  \"Q\",\r\n  \"R\",\r\n  \"S\",\r\n  \"T\",\r\n  \"U\",\r\n  \"V\",\r\n  \"W\",\r\n  \"X\",\r\n  \"Y\",\r\n  \"Z\"\r\n];\r\n","import styled from \"styled-components\";\r\n\r\nexport const EmployeesListWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 200px);\r\n  gap: 1rem;\r\n  border-right: 2px solid #000;\r\n  justify-content: center;\r\n`;\r\nEmployeesListWrapper.displayName = \"EmployeesListWrapper\";\r\n","import { FC } from \"react\";\r\nimport EmployeeItem from \"../EmployeeItem\";\r\nimport { IEmployee } from \"../../api\";\r\nimport { alphabet } from \"../../utils\";\r\nimport { EmployeesListWrapper } from \"./styles\";\r\n\r\ninterface EmployeesListProps {\r\n  employees: IEmployee[];\r\n}\r\n\r\ninterface EmployeeItemsListProps {\r\n  char: string;\r\n  employees: IEmployee[];\r\n}\r\n\r\ninterface AlphabetListProps {\r\n  employees: IEmployee[];\r\n}\r\n\r\nconst EmployeeItemsList: FC<EmployeeItemsListProps> = ({ char, employees }) => {\r\n  return (\r\n    <div>\r\n      <h2>{char}</h2>\r\n      {employees.length > 0\r\n        ? employees.map((employee) => (\r\n            <EmployeeItem key={employee.id} employee={employee} />\r\n          ))\r\n        : \"No employees\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AlphabetList: FC<AlphabetListProps> = ({ employees }) => {\r\n  return (\r\n    <>\r\n      {alphabet.map((char, index) => (\r\n        <EmployeeItemsList\r\n          key={index}\r\n          char={char}\r\n          employees={employees.filter(\r\n            (employee) => employee.firstName[0] === char\r\n          )}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst EmployeesList: FC<EmployeesListProps> = ({ employees }) => {\r\n  return (\r\n    <EmployeesListWrapper>\r\n      <AlphabetList employees={employees} />\r\n    </EmployeesListWrapper>\r\n  );\r\n};\r\n\r\nexport default EmployeesList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const BirthdayItemWrapper = styled.li`\r\n  margin: 5px 0;\r\n  font-weight: 700;\r\n  font-size: 17px;\r\n`;\r\nBirthdayItemWrapper.displayName = \"BirthdayItemWrapper\";\r\n","import {FC} from \"react\";\r\nimport moment from \"moment\";\r\nimport {IEmployee} from \"../../api\";\r\nimport {BirthdayItemWrapper} from \"./styles\";\r\n\r\ninterface BirthdayItemProps {\r\n  employee: IEmployee;\r\n}\r\n\r\nconst BirthdayItem: FC<BirthdayItemProps> = ({employee}) => {\r\n  const fullEmployeeNames = `${employee.firstName} ${employee.lastName}`;\r\n  const fullDateOfBirthday = `${moment(employee.dob).format('D MMMM, YYYY')} year`;\r\n\r\n  return <BirthdayItemWrapper>{fullEmployeeNames} - {fullDateOfBirthday}</BirthdayItemWrapper>\r\n};\r\n\r\nexport default BirthdayItem;\r\n","import styled from \"styled-components\";\r\n\r\nexport const BirthdayListWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: repeat(1, 1fr);\r\n  gap: 1rem;\r\n  border-top: 2px solid #000;\r\n  margin: 0 70px;\r\n  padding: 15px 0;\r\n`;\r\nBirthdayListWrapper.displayName = \"BirthdayListWrapper\";\r\n\r\nexport const BirthdayListTitle = styled.h3``;\r\nBirthdayListTitle.displayName = \"BirthdayListTitle\";\r\n","import {FC} from \"react\";\r\nimport {IEmployee} from \"../../api\";\r\nimport moment from \"moment\";\r\nimport BirthdayItem from \"../BirthdayItem\";\r\nimport {BirthdayListWrapper, BirthdayListTitle} from \"./styles\";\r\n\r\ninterface BirthdayListProps {\r\n  selectedEmployees: IEmployee[];\r\n}\r\n\r\ninterface ListItemsProps {\r\n  month: string;\r\n  employees: IEmployee[];\r\n}\r\n\r\ninterface MonthsListProps {\r\n  employees: IEmployee[];\r\n}\r\n\r\nconst ListItems: FC<ListItemsProps> = ({month, employees}) => {\r\n  const sortedEmployeesByLastName = employees.sort((a, b) =>\r\n    a.lastName.localeCompare(b.lastName));\r\n\r\n  return (\r\n    <div>\r\n      <h2>{month}</h2>\r\n      {sortedEmployeesByLastName.length > 0\r\n        ? sortedEmployeesByLastName.map((employee) => (\r\n          <BirthdayItem key={employee.id} employee={employee}/>\r\n        ))\r\n        : \"No employees\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MonthsList: FC<MonthsListProps> = ({employees}) => {\r\n  const months = moment.months();\r\n  const currentMonth = moment().month();\r\n  const monthsArr = months.concat(months.slice(0, currentMonth)).slice(-12);\r\n\r\n  return (\r\n    <>\r\n      {monthsArr.map((month, index) => (\r\n        <ListItems\r\n          key={index}\r\n          month={month}\r\n          employees={employees.filter(\r\n            (employee) => moment(employee.dob).format('MMMM') === month\r\n          )}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst BirthdayList: FC<BirthdayListProps> = ({selectedEmployees}) => {\r\n  return (\r\n    <BirthdayListWrapper>\r\n      {selectedEmployees.length > 0 ? (\r\n        <MonthsList employees={selectedEmployees}/>\r\n      ) : (\r\n        <BirthdayListTitle>Employees List is empty</BirthdayListTitle>\r\n      )}\r\n    </BirthdayListWrapper>\r\n  );\r\n};\r\n\r\nexport default BirthdayList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LoaderText = styled.h2`\r\n  text-align: center;\r\n  margin-top: 20px;\r\n`;\r\nLoaderText.displayName = \"LoaderText\";\r\n","import { FC } from \"react\";\r\nimport { LoaderText } from \"./styles\";\r\n\r\nconst Loader: FC = () => {\r\n  return <LoaderText>Loading...</LoaderText>;\r\n};\r\n\r\nexport default Loader;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ErrorMessage = styled.h2`\r\n  text-align: center;\r\n  margin-top: 20px;\r\n`;\r\nErrorMessage.displayName = \"ErrorMessage\";\r\n","import { FC } from \"react\";\r\nimport { ErrorMessage } from \"./styles\";\r\n\r\ninterface ErrorProps {\r\n  message: string;\r\n}\r\n\r\nconst Error: FC<ErrorProps> = ({ message }) => {\r\n  return <ErrorMessage>{message}</ErrorMessage>;\r\n};\r\n\r\nexport default Error;\r\n","import styled from \"styled-components\";\r\n\r\nexport const EmployeesWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  padding: 0 30px;\r\n  margin: 50px 0;\r\n`;\r\nEmployeesWrapper.displayName = \"EmployeesWrapper\";\r\n\r\nexport const EmployeesBox = styled.div``;\r\nEmployeesBox.displayName = \"EmployeesBox\";\r\n\r\nexport const EmployeesBirthday = styled.div``;\r\nEmployeesBirthday.displayName = \"EmployeesBirthday\";\r\n\r\nexport const EmployeesTitle = styled.h2`\r\n  text-align: center;\r\n  margin-bottom: 25px;\r\n`;\r\nEmployeesTitle.displayName = \"EmployeesTitle\";\r\n","import { FC, useEffect } from \"react\";\r\nimport { useTypedDispatch } from \"../../hooks/useTypedDispatch\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { getEmployees } from \"../../store/features/employees/employeesSlice\";\r\nimport EmployeesList from \"../../components/EmployeesList\";\r\nimport BirthdayList from \"../../components/BirthdayList\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Error from \"../../components/Error\";\r\nimport { EmployeesWrapper, EmployeesBox, EmployeesTitle } from \"./styles\";\r\n\r\nconst Employees: FC = () => {\r\n  const dispatch = useTypedDispatch();\r\n  const { status, error, employees, selectedEmployees } = useTypedSelector(\r\n    (state) => state.employees\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getEmployees());\r\n  }, [dispatch]);\r\n\r\n  if (status === \"loading\") return <Loader />;\r\n  if (error) return <Error message={error} />;\r\n\r\n  return (\r\n    <EmployeesWrapper>\r\n      <EmployeesBox>\r\n        <EmployeesTitle>Employees</EmployeesTitle>\r\n        <EmployeesList employees={employees} />\r\n      </EmployeesBox>\r\n      <EmployeesBox>\r\n        <EmployeesTitle>Employees birthday</EmployeesTitle>\r\n        <BirthdayList selectedEmployees={selectedEmployees} />\r\n      </EmployeesBox>\r\n    </EmployeesWrapper>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n","import { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport { GlobalStyle } from \"./styles\";\nimport Employees from \"./pages/Employees\";\n\nrender(\n    <Provider store={store}>\n      <GlobalStyle />\n      <Employees/>\n    </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}